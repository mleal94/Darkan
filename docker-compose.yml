version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: or-scheduler-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: or_scheduler
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - or-network

  # Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: or-scheduler-zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - or-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: or-scheduler-kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - or-network

  # Redis para rate limiting
  redis:
    image: redis:7.2-alpine
    container_name: or-scheduler-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - or-network

  # MinIO (S3 compatible)
  minio:
    image: minio/minio:latest
    container_name: or-scheduler-minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - or-network

  # Auth Service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: or-scheduler-auth-service
    restart: unless-stopped
    ports:
      - "3001:3001"
      - "5001:5001" # gRPC
    environment:
      NODE_ENV: development
      PORT: 3001
      GRPC_PORT: 5001
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/or_scheduler?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      REDIS_URL: redis://redis:6379
    depends_on:
      - mongodb
      - redis
    networks:
      - or-network

  # OR Service
  or-service:
    build:
      context: ./services/or-service
      dockerfile: Dockerfile
    container_name: or-scheduler-or-service
    restart: unless-stopped
    ports:
      - "3002:3002"
      - "5002:5002" # gRPC
    environment:
      NODE_ENV: development
      PORT: 3002
      GRPC_PORT: 5002
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/or_scheduler?authSource=admin
      KAFKA_BROKERS: kafka:9092
      AUTH_SERVICE_GRPC_URL: auth-service:5001
      REDIS_URL: redis://redis:6379
    depends_on:
      - mongodb
      - kafka
      - auth-service
    networks:
      - or-network

  # File Service
  file-service:
    build:
      context: ./services/file-service
      dockerfile: Dockerfile
    container_name: or-scheduler-file-service
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      NODE_ENV: development
      PORT: 3003
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/or_scheduler?authSource=admin
      KAFKA_BROKERS: kafka:9092
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin123
      S3_BUCKET: or-scheduler-files
      S3_REGION: us-east-1
    depends_on:
      - mongodb
      - kafka
      - minio
    networks:
      - or-network

volumes:
  mongodb_data:
  kafka_data:
  redis_data:
  minio_data:

networks:
  or-network:
    driver: bridge
